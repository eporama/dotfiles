[user]
  name = Erik Peterson
  email = erik.peterson@acquia.com
[core]
  excludesfile = /Users/erik.peterson/.gitignore_global
  pager = /usr/bin/less -+$LESS -FRX
[uploadArchive]
  allowUnreachable = true
[color]
  ui = true
[difftool "sourcetree"]
  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path = 
[mergetool "sourcetree"]
  cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode = true
[push]
  default = matching
[alias]
  la = "!git config -l | grep alias | cut -c 7-"
  graph = log --all --graph --decorate --oneline -n30
  le = log --oneline --decorate
  sync = "!f() { git checkout master && git fetch --all && git rebase upstream/master && git push -f origin master; }; f"
    # Return commit messages for the current tag
    merges = "!f() { git log --oneline --merges --simplify-merges --pretty=format:\"%B\" $(git ahtag)..master | egrep -v '(^Merge|^$)' | sed -e 's/^/  * /'; }; f"

    # Return a list of contributors
    contribs = "!f() { git log --oneline --no-merges --pretty=format:\"%an\" $(git ahtag)..master | sort -u |  awk '{print}' ORS='++ ' | sed -e 's/^/Contributions by: /'; }; f"

    # Get the remote name of the acquia/support-cli upstream repo
    ahremote = "!f() { git remote -v | grep -m 1 \"acquia/support-cli\" | cut -f1 ; }; f"

    # Construct nicely formatted  release notes
    prnotes2 = "!f() { echo 'This release:' ; git merges ; echo; git contribs ; echo; git ahtag; }; f"

    # Get the most recent tag
    ahtag = "!f() { git ls-remote --tags $(git ahremote) release-* | cut -f2  | sort | tail -n1 ; }; f"

    # Create a tagged release and push to the upstream repo
    prod-release = "!f() { ACQUIA_REMOTE=$(git remote -v | grep -m 1 \"git@github.com:acquia/support-cli.git (push)\" | cut -f1) && RELEASE_TAG=$(date -u +release-%F-%H-%M) && git tag -a ${RELEASE_TAG} && git push ${ACQUIA_REMOTE} ${RELEASE_TAG} && git --no-pager log --pretty=format:\"%n%C(yellow)%h%Creset %s%Cblue [%an]%n       %Cred%d%Creset%n\" --decorate -1; }; f"


  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%an]" --decorate
  ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%an]" --decorate --date=relative
  le = log --oneline --decorate
  trim = "!f() { for GIT_TRIM_BRANCH in $(git branch --merged | egrep -v \"(\\* | master$)\" ); do git branch -d \"$GIT_TRIM_BRANCH\"; done; }; f"

[hub]
  protocol = git

[pager]
  log = `brew --prefix git`/share/git-core/contrib/diff-highlight/diff-highlight | /usr/bin/less -+$LESS -FRX
  diff = `brew --prefix git`/share/git-core/contrib/diff-highlight/diff-highlight | /usr/bin/less -+$LESS -FRX
  show = `brew --prefix git`/share/git-core/contrib/diff-highlight/diff-highlight | /usr/bin/less -+$LESS -FRX
[github]
	user = eporama
